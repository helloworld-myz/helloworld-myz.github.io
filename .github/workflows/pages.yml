name: Deploy Hugo to GitHub Pages

on:
  push:
    branches:
      - main  # 主分支
  workflow_dispatch:  # 允许手动触发

concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.146.0  # 保持与你本地一致的版本
      HUGO_SOURCE: ./blog  # Hugo 项目所在的子目录（关键配置）
    steps:
      - name: Install Hugo
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: false  # 禁用子模块（如果主题不是子模块）

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Hugo（从 blog 子目录构建）
        run: |
          # 进入 blog 目录执行构建，确保读取正确的 config.toml
          cd ${{ env.HUGO_SOURCE }}
          hugo --baseURL ${{ steps.pages.outputs.base_url }}
        # 构建后，静态文件会生成在 ./blog/public（由 blog/config.toml 中的 publishDir 决定）

      - name: Upload blog/public 目录
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.HUGO_SOURCE }}/public  # 明确上传 blog/public 目录

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        # 无需指定 folder，自动读取上传的 artifact